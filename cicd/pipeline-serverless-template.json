{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "The CodePipeline Stack.  It builds the infrastructure to get to production.",
    "Parameters": {
        "GitHubToken": {
            "NoEcho": "true",
            "Type": "String",
            "Description": "Secret. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af OAuthToken with access to Repo. Go to https://github.com/settings/tokens"
        },
        "GitHubUser": {
            "Type": "String",
            "Description": "GitHub UserName",
            "Default": "launchpadmcjeff"
        },
        "Repo": {
            "Type": "String",
            "Description": "GitHub Repo to pull from. Only the Name. not the URL",
            "Default": "gmaps"
        },
        "Branch": {
            "Type": "String",
            "Description": "Branch to use from Repo. Only the Name. not the URL",
            "Default": "master"
        },
        "Email": {
            "Description": "The email address where CodePipeline sends pipeline notifications",
            "Type": "String"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "CodePipeline Settings"
                    },
                    "Parameters": [
                        "GitHubToken",
                        "GitHubUser",
                        "Repo",
                        "Branch",
                        "Email"
                    ]
                }
            ]
        }
    },
    "Resources": {
        "CodePipelineSNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {
                        "Endpoint": {
                            "Ref": "Email"
                        },
                        "Protocol": "email"
                    }
                ]
            }
        },
        "CodePipelineArtifactLocation": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Sub": "${AWS::StackName}-codepipeline-${AWS::Region}"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "${AWS::StackName}-CodePipelineArtifactLocation"
                    }
                ]
            }
        },
        "LambdaBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Sub": "${AWS::StackName}-lambda-bucket-${AWS::Region}"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "${AWS::StackName}-LambdaBucket"
                    }
                ]
            }
        },
        "CodePipelineDeployLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "LambdaBucket"
                    },
                    "S3Key": "pipeline-lambda.zip"
                },
                "Role": {
                    "Ref": "CodePipelineLambdaRoleArn"
                },
                "Description": "Run deploy tasks for pipeline",
                "Timeout": 300,
                "Handler": "index.deployHandler",
                "Runtime": "nodejs4.3",
                "MemorySize": 1536
            }
        },
        "CodePipeline": {
            "Type": "AWS::CodePipeline::Pipeline",
            "Properties": {
                "ArtifactStore": {
                    "Type": "S3",
                    "Location": {
                        "Ref": "CodePipelineArtifactLocation"
                    }
                },
                "RestartExecutionOnUpdate": true,
                "RoleArn": {
                    "Ref": "CodePipelineRole"
                },
                "Stages": [
                    {
                        "Name": "Source",
                        "Actions": [
                            {
                                "Name": "SourceAction",
                                "ActionTypeId": {
                                    "Category": "Source",
                                    "Owner": "ThirdParty",
                                    "Version": "1",
                                    "Provider": "GitHub"
                                },
                                "Configuration": {
                                    "Owner": {
                                        "Ref": "GitHubUser"
                                    },
                                    "Repo": {
                                        "Ref": "Repo"
                                    },
                                    "Branch": {
                                        "Ref": "Branch"
                                    },
                                    "OAuthToken": {
                                        "Ref": "GitHubToken"
                                    }
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": "Source01"
                                    }
                                ],
                                "RunOrder": 1
                            }
                        ]
                    },
                    {
                        "Name": "Production",
                        "Actions": [
                            {
                                "InputArtifacts": [
                                    {
                                        "Name": "Source01"
                                    }
                                ],
                                "Name": "DeployProdSite",
                                "ActionTypeId": {
                                    "Category": "Invoke",
                                    "Owner": "AWS",
                                    "Version": "1",
                                    "Provider": "Lambda"
                                },
                                "Configuration": {
                                    "FunctionName": {
                                        "Ref": "CodePipelineDeployLambda"
                                    },
                                    "UserParameters": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "type=s3&bucket=",
                                                {
                                                    "Ref": "ProdBucketName"
                                                },
                                                "&apiBaseurl=",
                                                {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            {
                                                                "Ref": "ProdApiUrl"
                                                            },
                                                            "/"
                                                        ]
                                                    ]
                                                }
                                            ]
                                        ]
                                    }
                                },
                                "OutputArtifacts": [],
                                "RunOrder": 1
                            }
                        ]
                    }
                ]
            }
        },
        "CodePipelineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codepipeline.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "CodePipelineAccess",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:GetObjectVersion",
                                        "s3:GetBucketVersioning"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        "arn:aws:s3:::codepipeline*",
                                        "arn:aws:s3:::elasticbeanstalk*"
                                    ],
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "codecommit:CancelUploadArchive",
                                        "codecommit:GetBranch",
                                        "codecommit:GetCommit",
                                        "codecommit:GetUploadArchiveStatus",
                                        "codecommit:UploadArchive"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "codedeploy:CreateDeployment",
                                        "codedeploy:GetApplicationRevision",
                                        "codedeploy:GetDeployment",
                                        "codedeploy:GetDeploymentConfig",
                                        "codedeploy:RegisterApplicationRevision"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "elasticbeanstalk:*",
                                        "ec2:*",
                                        "elasticloadbalancing:*",
                                        "autoscaling:*",
                                        "cloudwatch:*",
                                        "s3:*",
                                        "sns:*",
                                        "cloudformation:*",
                                        "rds:*",
                                        "sqs:*",
                                        "ecs:*",
                                        "iam:PassRole"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "lambda:InvokeFunction",
                                        "lambda:ListFunctions"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "opsworks:CreateDeployment",
                                        "opsworks:DescribeApps",
                                        "opsworks:DescribeCommands",
                                        "opsworks:DescribeDeployments",
                                        "opsworks:DescribeInstances",
                                        "opsworks:DescribeStacks",
                                        "opsworks:UpdateApp",
                                        "opsworks:UpdateStack"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "cloudformation:CreateStack",
                                        "cloudformation:DeleteStack",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:UpdateStack",
                                        "cloudformation:CreateChangeSet",
                                        "cloudformation:DeleteChangeSet",
                                        "cloudformation:DescribeChangeSet",
                                        "cloudformation:ExecuteChangeSet",
                                        "cloudformation:SetStackPolicy",
                                        "cloudformation:ValidateTemplate",
                                        "iam:PassRole"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "codebuild:BatchGetBuilds",
                                        "codebuild:StartBuild"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                }
                            ],
                            "Version": "2012-10-17"
                        }
                    }
                ]
            }
        }
    }
}