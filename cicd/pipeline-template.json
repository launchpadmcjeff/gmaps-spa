{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "The CodePipeline Stack.  It builds the infrastructure to get to production.",
    "Parameters": {
        "RoleStackName": {
            "Description": "Name of an active CloudFormation stack that contains the Service Roles.",
            "Type": "String",
            "MinLength": 1,
            "MaxLength": 255,
            "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
            "Default": "gmaps-roles"
        },
        "GitBranch": {
            "Description": "Git branch to use for builds.",
            "Type": "String",
            "Default": "aws-lab",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "Can contain only ASCII characters."
        },
        "RepositoryName": {
            "Description": "The Git repository to use for builds.",
            "Type": "String",
            "Default": "gmaps   ",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "Can contain only ASCII characters."
        },
        "CodeBuildProjectName": {
            "Description": "The CodeBuild project name to build.",
            "Type": "String",
            "Default": "gmaps-codebuild",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "Can contain only ASCII characters."
        },
        "Email": {
            "Description": "The email address where CodePipeline sends pipeline notifications",
            "Type": "String"
        },
        "TestStackName": {
            "Default": "gmaps-test",
            "Description": "A name for the test stack",
            "Type": "String"
        },
        "TestStackTemplate": {
            "Default": "cicd/gmaps-test-packaged-template.yaml",
            "Description": "The file name of the test template",
            "Type": "String"
        },
        "TestStackConfig": {
            "Default": "cicd/gmaps-test-config.json",
            "Description": "The configuration file name for the test stack",
            "Type": "String"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "CodePipeline Settings"
                    },
                    "Parameters": [
                        "RepositoryName",
                        "GitBranch",
                        "CodeBuildProjectName",
                        "Email"
                    ]
                }
            ]
        }
    },
    "Resources": {
        "CodePipelineSNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {
                        "Endpoint": {
                            "Ref": "Email"
                        },
                        "Protocol": "email"
                    }
                ]
            }
        },
        "CodePipelineArtifactLocation": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Sub": "${AWS::StackName}-${AWS::Region}"
                },
                "Tags": [
                    {
                        "Key": "Purpose",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-CodePipelineArtifactLocation"
                        }
                    }
                ]
            }
        },
        "CodePipeline": {
            "Type": "AWS::CodePipeline::Pipeline",
            "Properties": {
                "ArtifactStore": {
                    "Type": "S3",
                    "Location": {
                        "Ref": "CodePipelineArtifactLocation"
                    }
                },
                "RestartExecutionOnUpdate": true,
                "RoleArn": {
                    "Fn::GetAtt": [
                        "CodePipelineRole",
                        "Arn"
                    ]
                },
                "Stages": [
                    {
                        "Name": "Source",
                        "Actions": [
                            {
                                "Name": "SourceAction",
                                "ActionTypeId": {
                                    "Category": "Source",
                                    "Owner": "AWS",
                                    "Version": "1",
                                    "Provider": "CodeCommit"
                                },
                                "Configuration": {
                                    "RepositoryName": {
                                        "Ref": "RepositoryName"
                                    },
                                    "BranchName": {
                                        "Ref": "GitBranch"
                                    },
                                    "PollForSourceChanges": "true"
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": "Source01"
                                    }
                                ],
                                "RunOrder": 1
                            }
                        ]
                    },
                    {
                        "Name": "Build",
                        "Actions": [
                            {
                                "Name": "BuildAction",
                                "InputArtifacts": [
                                    {
                                        "Name": "Source01"
                                    }
                                ],
                                "ActionTypeId": {
                                    "Category": "Build",
                                    "Owner": "AWS",
                                    "Version": "1",
                                    "Provider": "CodeBuild"
                                },
                                "Configuration": {
                                    "ProjectName": {
                                        "Ref": "CodeBuildProjectName"
                                    }
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": "Build01"
                                    }
                                ],
                                "RunOrder": 10
                            }
                        ]
                    },
                    {
                        "Name": "TestDeploy",
                        "Actions": [
                            {
                                "Name": "CreateTestStack",
                                "ActionTypeId": {
                                    "Category": "Deploy",
                                    "Owner": "AWS",
                                    "Provider": "CloudFormation",
                                    "Version": "1"
                                },
                                "InputArtifacts": [
                                    {
                                        "Name": "Source01"
                                    },
                                    {
                                        "Name": "Build01"
                                    }
                                ],
                                "Configuration": {
                                    "ActionMode": "REPLACE_ON_FAILURE",
                                    "RoleArn": {
                                        "Fn::ImportValue": {
                                            "Fn::Sub": "${RoleStackName}-CloudFormationRoleArn"
                                        }
                                    },
                                    "Capabilities": "CAPABILITY_NAMED_IAM",
                                    "StackName": {
                                        "Ref": "TestStackName"
                                    },
                                    "TemplateConfiguration": {
                                        "Fn::Sub": "Build01::${TestStackConfig}"
                                    },
                                    "TemplatePath": {
                                        "Fn::Sub": "Build01::${TestStackTemplate}"
                                    }
                                },
                                "RunOrder": 20
                            }
                        ]
                    }
                ]
            }
        },
        "CodePipelineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codepipeline.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "CodePipelineAccess",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:GetObjectVersion",
                                        "s3:GetBucketVersioning"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        "arn:aws:s3:::codepipeline*",
                                        "arn:aws:s3:::elasticbeanstalk*"
                                    ],
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "codecommit:CancelUploadArchive",
                                        "codecommit:GetBranch",
                                        "codecommit:GetCommit",
                                        "codecommit:GetUploadArchiveStatus",
                                        "codecommit:UploadArchive"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "codedeploy:CreateDeployment",
                                        "codedeploy:GetApplicationRevision",
                                        "codedeploy:GetDeployment",
                                        "codedeploy:GetDeploymentConfig",
                                        "codedeploy:RegisterApplicationRevision"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "elasticbeanstalk:*",
                                        "ec2:*",
                                        "elasticloadbalancing:*",
                                        "autoscaling:*",
                                        "cloudwatch:*",
                                        "s3:*",
                                        "sns:*",
                                        "cloudformation:*",
                                        "rds:*",
                                        "sqs:*",
                                        "ecs:*",
                                        "iam:PassRole"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "lambda:InvokeFunction",
                                        "lambda:ListFunctions"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "opsworks:CreateDeployment",
                                        "opsworks:DescribeApps",
                                        "opsworks:DescribeCommands",
                                        "opsworks:DescribeDeployments",
                                        "opsworks:DescribeInstances",
                                        "opsworks:DescribeStacks",
                                        "opsworks:UpdateApp",
                                        "opsworks:UpdateStack"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "cloudformation:CreateStack",
                                        "cloudformation:DeleteStack",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:UpdateStack",
                                        "cloudformation:CreateChangeSet",
                                        "cloudformation:DeleteChangeSet",
                                        "cloudformation:DescribeChangeSet",
                                        "cloudformation:ExecuteChangeSet",
                                        "cloudformation:SetStackPolicy",
                                        "cloudformation:ValidateTemplate",
                                        "iam:PassRole"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "codebuild:BatchGetBuilds",
                                        "codebuild:StartBuild"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                }
                            ],
                            "Version": "2012-10-17"
                        }
                    }
                ]
            }
        },
        "CloudFormationRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "cloudformation.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "CloudFormationRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:*",
                                        "iam:*",
                                        "elasticloadbalancing:*",
                                        "autoscaling:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        }
    }
}